name: Create Release

on:
  workflow_dispatch:
    inputs:
      major:
        description: "Major"
        type: boolean
        default: false
      minor:
        description: "Minor"
        type: boolean
        default: false
      beta:
        description: "Beta"
        type: boolean
        default: false

jobs:
  build:
    uses: ./.github/workflows/build_rive_code_generator.yaml

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci
        working-directory: ./.github/scripts/release

      - name: Configure Git
        run: |
          git config --local user.email 'hello@rive.app'
          git config --local user.name ${{ github.actor }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: rive_code_generator_macosx

      - name: Major Release
        if: ${{ inputs.major == true }}
        run: npm run release -- major --ci --github.assets=rive_code_generator_macosx ${{ inputs.beta && '--preRelease=beta' || '' }}
        working-directory: ./.github/scripts/release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Minor Release
        if: ${{ inputs.major == false && inputs.minor == true }}
        run: npm run release -- minor --ci --github.assets=rive_code_generator_macosx ${{ inputs.beta && '--preRelease=beta' || '' }}
        working-directory: ./.github/scripts/release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Patch Release
        if: ${{ inputs.major == false && inputs.minor == false }}
        run: npm run release -- --ci --github.assets=rive_code_generator_macosx ${{ inputs.beta && '--preRelease=beta' || '' }}
        working-directory: ./.github/scripts/release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
